{"version":3,"sources":["context/BreadcrumbLinks.js","components/BreadcrumbLinks/BreadcrumbLinks.js","hooks/useHttpClient.js","components/Spinner/Spinner.js","components/Modal/Modal.js","pages/Documents/Documents.js","components/Header/Header.js","components/Folders/Folders.js","components/CreateFolderModal/CreateFolderModal.js","pages/Semesters/Semesters.js","pages/Subjects/Subjects.js","Endless-Constellation1.svg","App.js","index.js"],"names":["BreadcrumbLinksContext","createContext","links","pushLink","useStyles","makeStyles","theme","textDecoration","color","textTransform","letterSpacing","fontFamily","fontWeight","transition","opacity","borderBottom","breadcrumbsRoot","textAlign","BreadcrumbLinks","classes","active","Breadcrumbs","separator","NavigateNext","maxItems","className","map","link","i","Typography","to","route","text","useHttpClient","useState","isLoading","setIsLoading","error","setError","url","a","method","body","headers","resType","axios","data","responseType","response","status","Spinner","Modal","showModal","closeModalHandler","title","children","footer","Dialog","open","onClose","DialogTitle","DialogContent","DialogActions","root","minHeight","border","padding","header","display","justifyContent","alignItems","cardRoot","height","flexDirection","transform","boxShadow","backgroundColor","file","errText","borderRadius","marginBottom","Documents","docs","setDocs","clearError","sendRequest","useParams","semId","subId","breadcrumbLinks","useContext","fileRef","useRef","useEffect","process","res","fetchDocs","onClickHandler","docId","type","console","log","Blob","fileUrl","URL","createObjectURL","window","selectFileHandler","e","formData","FormData","append","target","files","doc","Container","id","ref","onChange","IconButton","onClick","current","click","AttachFile","align","length","CSSTransition","in","timeout","classNames","Grid","container","spacing","item","xs","sm","md","Card","variant","CardHeader","name","subheader","semester","subject","avatar","Avatar","split","CardActions","_id","GetApp","Header","AppBar","position","style","Toolbar","directory","margin","cursor","palette","primary","main","directoryDetails","marginRight","Folders","dirs","history","useHistory","location","useLocation","dir","Paper","elevation","push","slug","pathname","Folder","deleteBtn","Delete","input","fontSize","CreateFolderModal","setDirectories","dirName","setDirName","submitHandler","preventDefault","Button","value","Semesters","semesters","setSemesters","setShowModal","slice","fetchDirectores","CreateNewFolder","Subjects","subjects","setSubjects","fetchSubjects","App","backgroundImage","BackgroundSVG","Provider","path","exact","component","createMuiTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.fb090719.chunk.js","sourcesContent":["import React, { createContext } from \"react\";\r\n\r\nconst BreadcrumbLinksContext = createContext({\r\n  links: [],\r\n  pushLink: () => {},\r\n});\r\n\r\nexport default BreadcrumbLinksContext;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography, Breadcrumbs, makeStyles } from \"@material-ui/core\";\r\nimport { NavigateNext } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  links: {\r\n    textDecoration: \"none\",\r\n    color: \"rgba(255,255,255,0.6)\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: \"1px\",\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: \"500\",\r\n    transition: \"all 0.3s ease\",\r\n    \"&:hover\": {\r\n      opacity: 0.8,\r\n      borderBottom: \"1px solid\",\r\n    },\r\n  },\r\n  breadcrumbsRoot: {\r\n    \"& > ol > li > p\": {\r\n      textAlign: \"left\",\r\n    },\r\n    \"& .MuiBreadcrumbs-separator\": {\r\n      color: \"rgba(255,255,255,0.6)\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst BreadcrumbLinks = ({ links, active }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Breadcrumbs\r\n      separator={<NavigateNext />}\r\n      maxItems={2}\r\n      className={classes.breadcrumbsRoot}\r\n    >\r\n      {/* <Typography style={{ color: \"tomato\" }}>IT</Typography> */}\r\n      {links.map((link, i) => {\r\n        return (\r\n          <Typography key={i}>\r\n            <Link color=\"inherit\" to={link.route} className={classes.links}>\r\n              {link.text}\r\n            </Link>\r\n          </Typography>\r\n        );\r\n      })}\r\n    </Breadcrumbs>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbLinks;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const sendRequest = async (\r\n    url,\r\n    method = \"GET\",\r\n    body = {},\r\n    headers = {},\r\n    resType = \"\"\r\n  ) => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      const response = await axios(url, {\r\n        method,\r\n        data: body,\r\n        headers,\r\n        responseType: resType,\r\n      });\r\n      if (response.data.status === \"success\") {\r\n        setIsLoading(false);\r\n        return response.data;\r\n      }\r\n      if (resType === \"blob\") {\r\n        setIsLoading(false);\r\n        return response;\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      resType === \"blob\"\r\n        ? setError(\"Error while downloading. Please try again\")\r\n        : setError(error.response.data.error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return [isLoading, error, clearError, sendRequest];\r\n};\r\n\r\nexport default useHttpClient;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"center\">\r\n      <div className=\"lds-ring\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nconst Modal = ({\r\n  showModal,\r\n  closeModalHandler,\r\n  title,\r\n  isLoading,\r\n  error,\r\n  children,\r\n  footer,\r\n}) => {\r\n  return (\r\n    <Dialog open={showModal} onClose={closeModalHandler}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent>\r\n        {isLoading ? <Spinner /> : children}\r\n        {error && <Typography color=\"secondary\">{error}</Typography>}\r\n        <DialogActions>{footer}</DialogActions>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport BreadcrumbLinksContext from \"../../context/BreadcrumbLinks\";\r\nimport BreadcrumbLinks from \"../../components/BreadcrumbLinks/BreadcrumbLinks\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  Avatar,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { AttachFile, GetApp } from \"@material-ui/icons\";\r\nimport useHttpClient from \"../../hooks/useHttpClient\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\n\r\nimport \"./Documents.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"80vh\",\r\n    border: \"1px solid rgba(1,1,1,0.2)\",\r\n    padding: \"10px\",\r\n  },\r\n  header: {\r\n    textAlign: \"right\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  cardRoot: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    transition: \"all 0.3s ease\",\r\n    \"&:hover\": {\r\n      transform: \"translateY(-2px)\",\r\n      boxShadow: \"0px 3px 10px rgba(0,0,0,0.2)\",\r\n      backgroundColor: \"rgba(255,255,255, 1)\",\r\n    },\r\n    \"& span\": {\r\n      fontFamily: \"Roboto\",\r\n      fontWeight: \"bold\",\r\n    },\r\n    backgroundColor: \"rgba(255,255,255, 0.8)\",\r\n  },\r\n  file: {\r\n    display: \"none\",\r\n  },\r\n  errText: {\r\n    padding: \"10px\",\r\n    border: \"1px solid red\",\r\n    borderRadius: \"6px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n});\r\n\r\nconst Documents = () => {\r\n  const [docs, setDocs] = useState([]);\r\n  const [isLoading, error, clearError, sendRequest] = useHttpClient();\r\n  const { semId, subId } = useParams();\r\n  const breadcrumbLinks = useContext(BreadcrumbLinksContext);\r\n  const fileRef = useRef();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const fetchDocs = async () => {\r\n      try {\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_URL}/docs/${semId}/${subId}`\r\n        );\r\n        setDocs(res.docs);\r\n      } catch (error) {}\r\n    };\r\n    fetchDocs();\r\n  }, []);\r\n\r\n  const onClickHandler = async (docId, type) => {\r\n    try {\r\n      clearError();\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_URL}/docs/${docId}?type=${type}`,\r\n        \"GET\",\r\n        null,\r\n        {},\r\n        \"blob\"\r\n      );\r\n      console.log(\"RESPONSE\", res);\r\n      const file = new Blob([res.data], { type: res.headers[\"content-type\"] });\r\n      const fileUrl = URL.createObjectURL(file);\r\n      window.open(fileUrl);\r\n    } catch (error) {\r\n      console.log(\"ERROR\", error);\r\n    }\r\n  };\r\n\r\n  const openSelectFileHandler = () => {\r\n    fileRef.current.click();\r\n  };\r\n\r\n  const selectFileHandler = async (e) => {\r\n    const formData = new FormData();\r\n    formData.append(\"doc\", e.target.files[0]);\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_URL}/docs/${semId}/${subId}`,\r\n        \"POST\",\r\n        formData\r\n      );\r\n      if (res.status === \"success\") {\r\n        setDocs([...docs, res.doc]);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        <div className={classes.header}>\r\n          <BreadcrumbLinks\r\n            links={breadcrumbLinks.links}\r\n            active={`/${semId}/${subId}`}\r\n          />\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              id=\"upload\"\r\n              className={classes.file}\r\n              ref={fileRef}\r\n              onChange={selectFileHandler}\r\n            />\r\n            <IconButton onClick={openSelectFileHandler} title=\"Upload file\">\r\n              <AttachFile color=\"secondary\" />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        {error && (\r\n          <Typography color=\"error\" align=\"center\" className={classes.errText}>\r\n            Something went wrong. Please try again\r\n          </Typography>\r\n        )}\r\n        {isLoading && docs.length !== 0 && (\r\n          <Modal title=\"Processing, please wait\" showModal={true}>\r\n            <Spinner />\r\n          </Modal>\r\n        )}\r\n        {isLoading && docs.length === 0 ? (\r\n          <Spinner />\r\n        ) : (\r\n          <CSSTransition\r\n            in={!isLoading && docs.length > 0}\r\n            timeout={3000}\r\n            classNames=\"files\"\r\n          >\r\n            <Grid container spacing={4}>\r\n              {docs.map((doc) => (\r\n                <Grid item key={doc._id} xs={12} sm={6} md={4}>\r\n                  <Card className={classes.cardRoot} variant=\"outlined\">\r\n                    <CardHeader\r\n                      title={doc.name}\r\n                      subheader={`${doc.semester}, ${doc.subject}`}\r\n                      avatar={<Avatar>{doc.name.split(\".\")[1]}</Avatar>}\r\n                    />\r\n                    <CardActions>\r\n                      <IconButton\r\n                        title=\"Download\"\r\n                        onClick={() => onClickHandler(doc._id, \"download\")}\r\n                      >\r\n                        <GetApp />\r\n                      </IconButton>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </CSSTransition>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Documents;\r\n","import React from \"react\";\r\nimport { AppBar, Container, Toolbar, Typography } from \"@material-ui/core\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <AppBar position=\"static\" style={{ backgroundColor: \"#4D004D\" }}>\r\n      <Toolbar>\r\n        <Container>\r\n          <Typography\r\n            variant=\"h5\"\r\n            style={{\r\n              color: \"rgb(202,0,255)\",\r\n              fontFamily: \"Pacifico\",\r\n              letterSpacing: \"1px\",\r\n            }}\r\n          >\r\n            My Notes\r\n          </Typography>\r\n        </Container>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from \"react\";\r\nimport { IconButton, makeStyles, Paper } from \"@material-ui/core\";\r\nimport { Delete, Folder } from \"@material-ui/icons\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport BreadcrumbLinksContext from \"../../context/BreadcrumbLinks\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./Folders.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  directory: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"10px\",\r\n    margin: \"10px 0\",\r\n    transition: \"all 0.3s ease\",\r\n    backgroundColor: \"rgba(255,255,255, 0.7)\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\",\r\n      transform: \"translateY(-2px)\",\r\n      boxShadow: \"0px 2px 10px rgba(0,0,0,0.3)\",\r\n      \"& .MuiSvgIcon-root\": {\r\n        color: theme.palette.primary.main,\r\n      },\r\n    },\r\n  },\r\n  directoryDetails: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-around\",\r\n    fontFamily: \"Roboto\",\r\n    letterSpacing: \"1px\",\r\n    alignItems: \"center\",\r\n    \"& .MuiSvgIcon-root\": {\r\n      marginRight: \"10px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Folders = ({ dirs, root }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const breadcrumbLinks = useContext(BreadcrumbLinksContext);\r\n\r\n  const onClickHandler = (dir) => {\r\n    history.push(\r\n      `${root ? `/${dir.slug}` : `${location.pathname}/${dir.slug}`}`\r\n    );\r\n    root\r\n      ? breadcrumbLinks.links.push({ text: dir.name, route: `/${dir.slug}` })\r\n      : breadcrumbLinks.links.push({\r\n          text: dir.name,\r\n          route: `${location.pathname}/${dir.slug}`,\r\n        });\r\n  };\r\n\r\n  return (\r\n    <CSSTransition in={dirs.length > 0} timeout={500} classNames=\"folders\">\r\n      <div>\r\n        {dirs.map((dir) => (\r\n          <Paper\r\n            className={classes.directory}\r\n            key={dir._id}\r\n            variant=\"outlined\"\r\n            elevation={2}\r\n            onClick={() => onClickHandler(dir)}\r\n          >\r\n            <div className={classes.directoryDetails}>\r\n              <Folder /> {dir.name}\r\n            </div>\r\n            <IconButton className={classes.deleteBtn}>\r\n              <Delete />\r\n            </IconButton>\r\n          </Paper>\r\n        ))}\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Folders;\r\n","import React, { useState } from \"react\";\r\nimport useHttpClient from \"../../hooks/useHttpClient\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    height: \"30px\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n}));\r\n\r\nconst CreateFolderModal = ({\r\n  setDirectories,\r\n  showModal,\r\n  closeModalHandler,\r\n  semId,\r\n}) => {\r\n  const [dirName, setDirName] = useState(\"\");\r\n  const [isLoading, error, clearError, sendRequest] = useHttpClient();\r\n  const classes = useStyles();\r\n\r\n  const inputChangeHandler = (e) => {\r\n    setDirName(e.target.value);\r\n    clearError();\r\n  };\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let url = semId\r\n      ? `${process.env.REACT_APP_URL}/subjects/${semId}`\r\n      : `${process.env.REACT_APP_URL}/semesters`;\r\n\r\n    try {\r\n      const res = await sendRequest(url, \"POST\", {\r\n        name: dirName,\r\n      });\r\n      setDirectories(res);\r\n      closeModalHandler();\r\n      setDirName(\"\");\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Create a New Folder\"\r\n      showModal={showModal}\r\n      closeModalHandler={closeModalHandler}\r\n      isLoading={isLoading}\r\n      error={error}\r\n      footer={\r\n        <>\r\n          <Button variant=\"outlined\" color=\"primary\" onClick={submitHandler}>\r\n            Create\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            onClick={closeModalHandler}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        className={classes.input}\r\n        value={dirName}\r\n        onChange={inputChangeHandler}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateFolderModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { CreateNewFolder } from \"@material-ui/icons\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Folders from \"../../components/Folders/Folders\";\r\nimport useHttpClient from \"../../hooks/useHttpClient\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport CreateFolderModal from \"../../components/CreateFolderModal/CreateFolderModal\";\r\nimport BreadcrumbLinksContext from \"../../context/BreadcrumbLinks\";\r\nimport BreadcrumbLinks from \"../../components/BreadcrumbLinks/BreadcrumbLinks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"80vh\",\r\n    border: \"1px solid rgba(1,1,1,0.2)\",\r\n    padding: \"10px\",\r\n  },\r\n  header: {\r\n    textAlign: \"right\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    height: \"30px\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n}));\r\n\r\nconst Semesters = () => {\r\n  const [semesters, setSemesters] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isLoading, error, clearError, sendRequest] = useHttpClient([]);\r\n  const breadcrumbLinks = useContext(BreadcrumbLinksContext);\r\n  const classes = useStyles();\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n    clearError();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDirectores = async () => {\r\n      breadcrumbLinks.links = breadcrumbLinks.links.slice(0, 1);\r\n      try {\r\n        const response = await sendRequest(\r\n          `${process.env.REACT_APP_URL}/semesters`\r\n        );\r\n        setSemesters(response.semesters);\r\n      } catch (error) {}\r\n    };\r\n    fetchDirectores();\r\n  }, []);\r\n\r\n  const updateSemesters = (res) => {\r\n    setSemesters([...semesters, res.semester]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CreateFolderModal\r\n        showModal={showModal}\r\n        setDirectories={updateSemesters}\r\n        closeModalHandler={closeModalHandler}\r\n        root\r\n      />\r\n      <Container>\r\n        <div className={classes.root}>\r\n          <div className={classes.header}>\r\n            <BreadcrumbLinks links={breadcrumbLinks.links} active=\"/\" />\r\n            <div>\r\n              <IconButton onClick={showModalHandler} title=\"Create new folder\">\r\n                <CreateNewFolder color=\"secondary\" />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          {isLoading && semesters.length === 0 ? (\r\n            <Spinner />\r\n          ) : (\r\n            <Folders dirs={semesters} root />\r\n          )}\r\n          {error && semesters.length === 0 && (\r\n            <Typography color=\"error\">\r\n              Something went wrong. Please try again\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Semesters;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Folders from \"../../components/Folders/Folders\";\r\nimport useHttpClient from \"../../hooks/useHttpClient\";\r\nimport {\r\n  Container,\r\n  IconButton,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { CreateNewFolder } from \"@material-ui/icons\";\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport CreateFolderModal from \"../../components/CreateFolderModal/CreateFolderModal\";\r\nimport BreadcrumbLinksContext from \"../../context/BreadcrumbLinks\";\r\nimport BreadcrumbLinks from \"../../components/BreadcrumbLinks/BreadcrumbLinks\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minHeight: \"80vh\",\r\n    border: \"1px solid rgba(1,1,1,0.2)\",\r\n    padding: \"10px\",\r\n  },\r\n  header: {\r\n    textAlign: \"right\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nconst Subjects = () => {\r\n  const { semId } = useParams();\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isLoading, error, clearError, sendRequest] = useHttpClient();\r\n  const breadcrumbLinks = useContext(BreadcrumbLinksContext);\r\n  const classes = useStyles();\r\n\r\n  const showModalHandler = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setShowModal(false);\r\n    clearError();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchSubjects = async () => {\r\n      breadcrumbLinks.links = breadcrumbLinks.links.slice(0, 2);\r\n      try {\r\n        const response = await sendRequest(\r\n          `${process.env.REACT_APP_URL}/subjects/${semId}`\r\n        );\r\n        setSubjects(response.subjects);\r\n      } catch (error) {}\r\n    };\r\n    fetchSubjects();\r\n  }, []);\r\n\r\n  const updateSubjects = (res) => {\r\n    setSubjects([...subjects, res.subject]);\r\n  };\r\n  return (\r\n    <>\r\n      <CreateFolderModal\r\n        showModal={showModal}\r\n        setDirectories={updateSubjects}\r\n        closeModalHandler={closeModalHandler}\r\n        semId={semId}\r\n      />\r\n      <Container>\r\n        <div className={classes.root}>\r\n          <div className={classes.header}>\r\n            <BreadcrumbLinks\r\n              links={breadcrumbLinks.links}\r\n              active={`/${semId}`}\r\n            />\r\n            <div>\r\n              <IconButton onClick={showModalHandler} title=\"Create new folder\">\r\n                <CreateNewFolder color=\"secondary\" />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          {isLoading && subjects.length === 0 ? (\r\n            <Spinner />\r\n          ) : (\r\n            <Folders dirs={subjects} />\r\n          )}\r\n          {error && subjects.length === 0 && (\r\n            <Typography color=\"error\">\r\n              Something went wrong. Please try again\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subjects;\r\n","export default __webpack_public_path__ + \"static/media/Endless-Constellation1.49a19961.svg\";","import { Route, Switch } from \"react-router-dom\";\n\nimport Documents from \"./pages/Documents/Documents\";\nimport Header from \"./components/Header/Header\";\nimport BreadcrumbLinksContext from \"./context/BreadcrumbLinks\";\nimport Semesters from \"./pages/Semesters/Semesters\";\nimport Subjects from \"./pages/Subjects/Subjects\";\nimport BackgroundSVG from \"./Endless-Constellation1.svg\";\n\nfunction App() {\n  return (\n    <div\n      style={{ backgroundImage: `url(${BackgroundSVG})`, minHeight: \"100vh\" }}\n    >\n      <BreadcrumbLinksContext.Provider\n        value={{ links: [{ text: \"ALL\", route: \"/\" }] }}\n      >\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={Semesters} />\n          <Route path=\"/:semId/:subId\" exact component={Documents} />\n          <Route path=\"/:semId\" exact component={Subjects} />\n        </Switch>\n      </BreadcrumbLinksContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n  },\n});\n\nReactDOM.render(\n  <BrowserRouter>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}